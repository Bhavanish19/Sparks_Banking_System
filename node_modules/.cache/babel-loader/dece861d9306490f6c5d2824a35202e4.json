{"ast":null,"code":"import _objectSpread from\"D:/Sparks projects/Basic_Banking_System-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:/Sparks projects/Basic_Banking_System-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/Sparks projects/Basic_Banking_System-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/Sparks projects/Basic_Banking_System-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/Sparks projects/Basic_Banking_System-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import classes from'./Transfer.module.css';import{connect}from'react-redux';import{NavLink}from'react-router-dom';import*as actions from'../../store/actions/index';import*as actionTypes from'../../store/actions/actionTypes';import{toast}from'react-toastify';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Transfer=/*#__PURE__*/function(_Component){_inherits(Transfer,_Component);var _super=_createSuper(Transfer);function Transfer(){var _this;_classCallCheck(this,Transfer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={amount:\"\"};_this.onAmountChange=function(event){_this.setState({amount:event.target.value});};_this.balanceUpdates=function(){var pattern=/^\\d+$/;if(!pattern.test(_this.state.amount)){toast.error(\"Invalid amount\");var tData={sender:_this.props.sender.email,receiver:_this.props.receiver.email,amount:parseInt(_this.state.amount),state:\"failure\"};_this.props.addTransaction(tData);}else if(_this.state.amount>_this.props.sender.currentBalance){toast.error(\"Transfer amount larger than sender balance\");var _tData={sender:_this.props.sender.email,receiver:_this.props.receiver.email,amount:parseInt(_this.state.amount),state:\"failure\"};_this.props.addTransaction(_tData);}else{_this.props.updateTransfer();var sData=_objectSpread(_objectSpread({},_this.props.sender),{},{currentBalance:_this.props.sender.currentBalance-_this.state.amount});var rData=_objectSpread(_objectSpread({},_this.props.receiver),{},{currentBalance:parseInt(_this.props.receiver.currentBalance)+parseInt(_this.state.amount)});_this.props.updateBalances(sData,rData);var _tData2={sender:sData.email,receiver:rData.email,amount:parseInt(_this.state.amount),state:\"success\"};_this.props.addTransaction(_tData2);}};return _this;}_createClass(Transfer,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{className:\"container mt-5\",children:/*#__PURE__*/_jsxs(\"div\",{className:classes.outerForm+\" shadow bg-white py-4\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Transfer Form\"}),/*#__PURE__*/_jsxs(\"form\",{className:classes.transferForm,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.formRow,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",disabled:true,name:\"sender\",value:\"Sender :: \"+this.props.sender.username}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",disabled:true,value:\"Balance :: \"+this.props.sender.currentBalance})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.formRow,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",disabled:true,name:\"receiver\",value:\"Receiver :: \"+this.props.receiver.username}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",disabled:true,value:\"Balance :: \"+this.props.receiver.currentBalance})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Transfer Amount\",value:this.state.amount,onChange:this.onAmountChange,className:classes.amountInput}),/*#__PURE__*/_jsxs(\"div\",{className:classes.btnGroup,children:[/*#__PURE__*/_jsx(NavLink,{to:\"/result\",children:/*#__PURE__*/_jsx(\"button\",{onClick:this.balanceUpdates,className:\"btn btn-success\",children:\"Transfer\"})}),/*#__PURE__*/_jsx(NavLink,{to:\"/\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",children:\"Cancel\"})})]})]})]})});}}]);return Transfer;}(Component);var mapStatetoProps=function mapStatetoProps(state){return{sender:state.transfer.sender,receiver:state.transfer.receiver};};var mapDispatchtoProps=function mapDispatchtoProps(dispatch){return{updateBalances:function updateBalances(sd,rd){return dispatch(actions.updateBalances(sd,rd));},updateTransfer:function updateTransfer(){return dispatch({type:actionTypes.TRANSFER_SUCCESS});},addTransaction:function addTransaction(data){return dispatch(actions.addTransaction(data));}};};export default connect(mapStatetoProps,mapDispatchtoProps)(Transfer);","map":{"version":3,"sources":["D:/Sparks projects/Basic_Banking_System-main/src/containers/Transfer/Transfer.js"],"names":["React","Component","classes","connect","NavLink","actions","actionTypes","toast","Transfer","state","amount","onAmountChange","event","setState","target","value","balanceUpdates","pattern","test","error","tData","sender","props","email","receiver","parseInt","addTransaction","currentBalance","updateTransfer","sData","rData","updateBalances","outerForm","transferForm","formRow","username","amountInput","btnGroup","mapStatetoProps","transfer","mapDispatchtoProps","dispatch","sd","rd","type","TRANSFER_SUCCESS","data"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from './Transfer.module.css';\n\nimport {connect} from 'react-redux';\nimport {NavLink} from 'react-router-dom';\nimport * as actions from '../../store/actions/index';\nimport * as actionTypes from '../../store/actions/actionTypes';\n\nimport {toast} from 'react-toastify';\n\nclass Transfer extends Component {\n    state = {\n        amount: \"\"\n    }\n    onAmountChange = (event) => {\n        this.setState({amount: event.target.value});\n    }\n    balanceUpdates = () => {\n        const pattern = /^\\d+$/;\n\n        if(!pattern.test(this.state.amount)){\n            toast.error(\"Invalid amount\");\n            const tData = {\n                sender: this.props.sender.email,\n                receiver: this.props.receiver.email,\n                amount: parseInt(this.state.amount),\n                state: \"failure\"\n            }\n            this.props.addTransaction(tData);\n        }else if(this.state.amount > this.props.sender.currentBalance){\n            toast.error(\"Transfer amount larger than sender balance\");\n            const tData = {\n                sender: this.props.sender.email,\n                receiver: this.props.receiver.email,\n                amount: parseInt(this.state.amount),\n                state: \"failure\"\n            }\n            this.props.addTransaction(tData);\n        }else{\n            this.props.updateTransfer();\n            const sData = {\n                ...this.props.sender,\n                currentBalance: this.props.sender.currentBalance - this.state.amount\n            };\n            const rData = {\n                ...this.props.receiver,\n                currentBalance: parseInt(this.props.receiver.currentBalance) + parseInt(this.state.amount)\n            }\n            this.props.updateBalances(sData, rData);\n            const tData = {\n                sender: sData.email,\n                receiver: rData.email,\n                amount: parseInt(this.state.amount),\n                state: \"success\"\n            }\n            this.props.addTransaction(tData);\n        }\n    }\n    render() { \n        return (\n            <div className=\"container mt-5\">\n                <div className={classes.outerForm + \" shadow bg-white py-4\"}>\n                    <h1>Transfer Form</h1>\n                    <form className={classes.transferForm}>\n                        <div className={classes.formRow}>\n                            <input type=\"text\" disabled name=\"sender\" \n                            value={\"Sender :: \"+this.props.sender.username} />\n                            <input type=\"text\" disabled\n                            value={\"Balance :: \"+this.props.sender.currentBalance} />\n                        </div>\n                        <div className={classes.formRow}>\n                            <input type=\"text\" disabled name=\"receiver\" \n                            value={\"Receiver :: \"+this.props.receiver.username} />\n                            <input type=\"text\" disabled\n                            value={\"Balance :: \"+this.props.receiver.currentBalance} />\n                        </div>\n                        <input type=\"text\" placeholder=\"Transfer Amount\"\n                                value={this.state.amount}\n                                onChange={this.onAmountChange}\n                                className={classes.amountInput} />\n                        <div className={classes.btnGroup}>\n                            <NavLink to=\"/result\">\n                                <button onClick={this.balanceUpdates} className=\"btn btn-success\">Transfer</button>\n                            </NavLink>\n                            <NavLink to=\"/\">\n                                <button className=\"btn btn-danger\">Cancel</button>\n                            </NavLink>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStatetoProps = state => {\n    return {\n        sender: state.transfer.sender,\n        receiver: state.transfer.receiver\n    }\n}\n\nconst mapDispatchtoProps = dispatch => {\n    return {\n        updateBalances: (sd, rd) => dispatch(actions.updateBalances(sd, rd)),\n        updateTransfer: () => dispatch({type: actionTypes.TRANSFER_SUCCESS}),\n        addTransaction: (data) => dispatch(actions.addTransaction(data))\n    }\n}\n \nexport default connect(mapStatetoProps, mapDispatchtoProps)(Transfer);"]},"metadata":{},"sourceType":"module"}