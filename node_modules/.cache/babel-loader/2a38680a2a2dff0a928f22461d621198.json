{"ast":null,"code":"import _classCallCheck from\"D:/Sparks projects/Basic_Banking_System-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/Sparks projects/Basic_Banking_System-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/Sparks projects/Basic_Banking_System-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/Sparks projects/Basic_Banking_System-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import classes from'./Customers.module.css';import{connect}from'react-redux';import*as actions from'../../store/actions/index';import Customer from'./Customer/Customer';import*as actionTypes from'../../store/actions/actionTypes';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Customers=/*#__PURE__*/function(_Component){_inherits(Customers,_Component);var _super=_createSuper(Customers);function Customers(){var _this;_classCallCheck(this,Customers);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={};return _this;}_createClass(Customers,[{key:\"componentWillMount\",value:function componentWillMount(){this.props.getAllUsers();this.props.updateTransfer();}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsxs(\"div\",{className:\"container py-5\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Send money from....\"}),/*#__PURE__*/_jsxs(\"div\",{className:classes.custRow,children:[/*#__PURE__*/_jsx(\"p\",{children:\"Sl No\"}),/*#__PURE__*/_jsx(\"p\",{children:\"User Name\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Mobile Number\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Current Balance\"})]}),this.props.users.map(function(user,index){return/*#__PURE__*/_jsx(Customer,{user:user,index:index+1,clik:function clik(){return _this2.props.addSender(user);},link:\"/customer/\"+index},'_'+Math.random().toString(36).substr(2,9));})]});}}]);return Customers;}(Component);var mapStatetoProps=function mapStatetoProps(state){return{users:state.user.users};};var mapDispatchtoProps=function mapDispatchtoProps(dispatch){return{getAllUsers:function getAllUsers(){return dispatch(actions.getAllUsers());},addSender:function addSender(data){return dispatch(actions.addSender(data));},updateTransfer:function updateTransfer(){return dispatch({type:actionTypes.TRANSFER_COMPLETE});}};};export default connect(mapStatetoProps,mapDispatchtoProps)(Customers);","map":{"version":3,"sources":["D:/Sparks projects/Basic_Banking_System-main/src/containers/Customers/Customers.js"],"names":["React","Component","classes","connect","actions","Customer","actionTypes","Customers","state","props","getAllUsers","updateTransfer","custRow","users","map","user","index","addSender","Math","random","toString","substr","mapStatetoProps","mapDispatchtoProps","dispatch","data","type","TRANSFER_COMPLETE"],"mappings":"4nBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CAEA,OAAQC,OAAR,KAAsB,aAAtB,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,2BAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,qBAArB,CACA,MAAO,GAAKC,CAAAA,WAAZ,KAA6B,iCAA7B,C,2FAEMC,CAAAA,S,uUACFC,K,CAAQ,E,uEAER,6BAAqB,CACjB,KAAKC,KAAL,CAAWC,WAAX,GACA,KAAKD,KAAL,CAAWE,cAAX,GACH,C,sBACD,iBAAS,iBACL,mBACI,aAAK,SAAS,CAAC,gBAAf,wBACI,2CADJ,cAEI,aAAK,SAAS,CAAET,OAAO,CAACU,OAAxB,wBACI,4BADJ,cAEI,gCAFJ,cAGI,4BAHJ,cAII,oCAJJ,cAKI,sCALJ,GAFJ,CASK,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,GAAjB,CAAqB,SAACC,IAAD,CAAOC,KAAP,qBAClB,KAAC,QAAD,EAAU,IAAI,CAAED,IAAhB,CAEQ,KAAK,CAAEC,KAAK,CAAC,CAFrB,CAGQ,IAAI,CAAE,sBAAM,CAAA,MAAI,CAACP,KAAL,CAAWQ,SAAX,CAAqBF,IAArB,CAAN,EAHd,CAIQ,IAAI,CAAE,aAAaC,KAJ3B,EACa,IAAME,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,CAAqC,CAArC,CADnB,CADkB,EAArB,CATL,GADJ,CAmBH,C,uBA3BmBpB,S,EA8BxB,GAAMqB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAd,KAAK,CAAI,CAC7B,MAAO,CACHK,KAAK,CAAEL,KAAK,CAACO,IAAN,CAAWF,KADf,CAAP,CAGH,CAJD,CAMA,GAAMU,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,CAAI,CACnC,MAAO,CACHd,WAAW,CAAE,6BAAMc,CAAAA,QAAQ,CAACpB,OAAO,CAACM,WAAR,EAAD,CAAd,EADV,CAEHO,SAAS,CAAE,mBAACQ,IAAD,QAAUD,CAAAA,QAAQ,CAACpB,OAAO,CAACa,SAAR,CAAkBQ,IAAlB,CAAD,CAAlB,EAFR,CAGHd,cAAc,CAAE,gCAAMa,CAAAA,QAAQ,CAAC,CAACE,IAAI,CAAEpB,WAAW,CAACqB,iBAAnB,CAAD,CAAd,EAHb,CAAP,CAKH,CAND,CAQA,cAAexB,CAAAA,OAAO,CAACmB,eAAD,CAAkBC,kBAAlB,CAAP,CAA6ChB,SAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport classes from './Customers.module.css';\n\nimport {connect} from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport Customer from './Customer/Customer';\nimport * as actionTypes from '../../store/actions/actionTypes';\n\nclass Customers extends Component {\n    state = {  }\n\n    componentWillMount() {\n        this.props.getAllUsers();\n        this.props.updateTransfer();       \n    }\n    render() { \n        return (\n            <div className=\"container py-5\">\n                <h1>Send money from....</h1>\n                <div className={classes.custRow}>\n                    <p>Sl No</p>\n                    <p>User Name</p>\n                    <p>Email</p>\n                    <p>Mobile Number</p>\n                    <p>Current Balance</p>\n                </div>\n                {this.props.users.map((user, index) => (\n                    <Customer user={user} \n                            key={'_' + Math.random().toString(36).substr(2, 9)}\n                            index={index+1}\n                            clik={() => this.props.addSender(user)}\n                            link={\"/customer/\"+index} />\n                ))}\n            </div>\n        );\n    }\n}\n\nconst mapStatetoProps = state => {\n    return {\n        users: state.user.users\n    }\n}\n\nconst mapDispatchtoProps = dispatch => {\n    return {\n        getAllUsers: () => dispatch(actions.getAllUsers()),\n        addSender: (data) => dispatch(actions.addSender(data)),\n        updateTransfer: () => dispatch({type: actionTypes.TRANSFER_COMPLETE})\n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Customers);"]},"metadata":{},"sourceType":"module"}